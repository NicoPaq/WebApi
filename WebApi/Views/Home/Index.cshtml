@using WebApi.Utils
<div class="jumbotron">
    <h1>ASP.NET</h1>
    <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS, and JavaScript.</p>
    <p><a href="https://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
</div>
<div class="row">
    <div class="col-md-4">
        <h2>Getting started</h2>
        <p>
            ASP.NET Web API is a framework that makes it easy to build HTTP services that reach
            a broad range of clients, including browsers and mobile devices. ASP.NET Web API
            is an ideal platform for building RESTful applications on the .NET Framework.
        </p>
        <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301870">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Get more libraries</h2>
        <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
        <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301871">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Web Hosting</h2>
        <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
        <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301872">Learn more &raquo;</a></p>
    </div>
</div>
<div>
    <h2>All Products</h2>
    <ul id="products"></ul>
</div>
<div>
    <h2>Search by ID</h2>
    <input type="text" id="prodId" size="5" />
    <input type="button" value="Search" onclick="find();" />
    <p id="product" />
</div>

<div class="row">
    <div class="col-md-12">
        <form id="myForm">
            <div class="row">
                <div class="col-sm-4">
                    <div class="customback">
                        @Html.ActionLink("Get Files", "GetXlsFile", "Home", new { area = "" }, new { @class = "btn btn-default" })
                    </div>   
                </div>
                <div class="col-sm-4">
                    <div class="customback">
                        <input type="file" name="FileUpload1" id="fileUpload" class="form-control btn btn-default">
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="customback">
                        <input type="button" id="btnUploadFile" value="Upload File" class="form-control btn btn-primary" />
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@{
    var path = CUtil.GetValueBaseOnKey("apiBaseUrl");
    var productPath = path + CUtil.GetValueBaseOnKey("ProductUrl");
}
<script src="https://code.jquery.com/jquery-2.0.3.js" integrity="sha256-lCf+LfUffUxr81+W0ZFpcU0LQyuZ3Bj0F2DQNCxTgSI=" crossorigin="anonymous"></script>
<script>

    function BindUpload() {
        $("#btnUploadFile").on("click", function () {
            var frmDt = new FormData(document.getElementById('myForm'));
            $.ajax({
                type: "POST",
                url: '@Url.Action("Upload","Home")',
                contentType: false,
                processData: false,
                data: frmDt,
                success: function (data) {
                    alert(data);
                },
                error: function (data) {
                    alert(data);
                }
            });
        });
    }

    $(document).ready(function () {
        BindUpload();
        // Send an Ajax Request
        $.getJSON('@productPath' + 'GetAll')
            .done(function (data) {
                // On success, 'data' contains a list of products.
                $.each(data, function (key, item) {
                    $('<li>', { text: formatItem(item) }).appendTo($('#products'));
                });
            })
            .fail(function (jqXHR, textStatus, err) {
                $('#product').text('Error: ' + err);                
            });
    });

    function formatItem(item) {
        return item.ProductName + ': $' + item.Price + ' (' + item.Category + ')';
    }

     function find() {
        var id = $('#prodId').val();
        $.getJSON('@productPath' + 'GetById?id=' + id)
            .done(function (data) {
                $('#product').text(formatItem(data));
            })
            .fail(function (jqXHR, textStatus, err) {
                $('#product').text('Error: ' + err);
            });
    }
</script>